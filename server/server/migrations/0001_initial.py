# Generated by Django 2.2.4 on 2020-09-26 14:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=254, null=True)),
                ('last_name', models.CharField(blank=True, max_length=254, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('43f020f2-8a6a-48e4-ba5b-da5104d16367'), editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(max_length=700)),
                ('url', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company', models.CharField(max_length=15)),
                ('model', models.CharField(max_length=15)),
                ('year', models.IntegerField(max_length=10)),
                ('car_type', models.CharField(max_length=15)),
                ('serial', models.CharField(max_length=20)),
                ('registration', models.PositiveIntegerField(max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('1a5b8212-f0e0-4c56-9fcc-607636cdbc44'), editable=False, primary_key=True, serialize=False)),
                ('oil_filter', models.BooleanField()),
                ('air_filter', models.BooleanField()),
                ('cabine_filter', models.BooleanField()),
                ('light_replace', models.BooleanField()),
                ('wheel_alignment', models.BooleanField()),
                ('brakes', models.BooleanField()),
                ('transmission_oil', models.BooleanField()),
                ('battery_replace', models.BooleanField()),
                ('tires_change', models.BooleanField()),
                ('fuel_filter_change', models.BooleanField()),
                ('glass_change', models.BooleanField()),
                ('mount_and_balance', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='EngineOil',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('3cc50af8-bcbc-4e94-9573-daf41f043f81'), editable=False, primary_key=True, serialize=False)),
                ('nextOdometer', models.PositiveIntegerField(max_length=20)),
                ('type', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCenter',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('e390fa17-9915-4304-b15e-72842eeb4ade'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=15)),
                ('location', models.CharField(max_length=20)),
                ('phoneNumber', models.PositiveIntegerField(verbose_name=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_centers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('1cfaeb7b-8c65-49b8-8810-1ada275f5dd6'), editable=False, primary_key=True, serialize=False)),
                ('engineState', models.CharField(max_length=20)),
                ('lightsState', models.CharField(max_length=20)),
                ('tiresState', models.CharField(max_length=20)),
                ('airConditioningState', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('7130c3b7-d7ce-41c0-82c3-b8d8f6aac17b'), editable=False, primary_key=True, serialize=False)),
                ('date', models.BigIntegerField(max_length=20)),
                ('odometer', models.PositiveIntegerField(max_length=20)),
                ('note', models.CharField(max_length=200)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='server.Car')),
                ('changes', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='server.Change')),
                ('engine_oil', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='server.EngineOil')),
                ('service_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='server.ServiceCenter')),
                ('states', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='server.Status')),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('d7cac4c4-fd1e-4449-a32a-0ab2333a6335'), editable=False, primary_key=True, serialize=False)),
                ('date', models.BigIntegerField(max_length=20)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer', to=settings.AUTH_USER_MODEL)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='server.Car')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reparation',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('132875ef-3339-40f8-b289-2f6edf0e3fad'), editable=False, primary_key=True, serialize=False)),
                ('date', models.BigIntegerField(max_length=20)),
                ('odometer', models.PositiveIntegerField(max_length=20)),
                ('what_repared', models.CharField(max_length=200)),
                ('note', models.CharField(max_length=200)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reparations', to='server.Car')),
                ('service_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reparations', to='server.ServiceCenter')),
            ],
        ),
        migrations.CreateModel(
            name='PredictedMaintenance',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('fd1faef6-4eb2-4ac2-8abd-9319b8929b97'), editable=False, primary_key=True, serialize=False)),
                ('date', models.BigIntegerField(max_length=20)),
                ('predictedMaintenance', models.TextField()),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_maintenance', to='server.Car')),
            ],
        ),
    ]
